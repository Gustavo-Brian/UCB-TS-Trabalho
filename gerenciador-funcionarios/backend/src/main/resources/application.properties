<<<<<<< HEAD
# Nome da aplicação Spring Boot (apenas informativo)
spring.application.name=gerenciamento-funcionarios

# ================================
# CONFIGURAÇÃO DO BANCO DE DADOS
# ================================

# URL de conexão com o banco de dados MySQL
# Substitua 'nome_do_banco' pelo nome do seu banco, se necessário
spring.datasource.url=jdbc:mysql://localhost:3306/nome_do_banco?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true

# Usuário do banco de dados
# Substitua 'seu_usuario' pelo username do seu acesso, se necessário
spring.datasource.username=root

# Senha do banco de dados
# Substitua 'sua_senha' pela senha do seu acesso, se necessário
spring.datasource.password=AaaBbbCcc123@
=======
# Nome da aplicaÃ§Ã£o Spring Boot (apenas informativo)
spring.application.name=gerenciamento-funcionarios

# ================================
# CONFIGURAÃ‡ÃƒO DO BANCO DE DADOS
# ================================

# URL de conexÃ£o com o banco de dados MySQL
# Substitua 'nome_do_banco' pelo nome do seu banco, se necessÃ¡rio
spring.datasource.url=jdbc:mysql://localhost:3306/nome_do_banco?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true

# UsuÃ¡rio do banco de dados
# Substitua 'seu_usuario' pelo username do seu acesso, se necessÃ¡rio
spring.datasource.username=seu_usuario

# Senha do banco de dados
# Substitua 'sua_senha' pela senha do seu acesso, se necessÃ¡rio
spring.datasource.password=sua_senha
>>>>>>> 8b1224231e1d1f484b8b7d9a4b3b62f9dc04b574

# Driver JDBC utilizado pelo Spring para o MySQL
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# ================================
<<<<<<< HEAD
# CONFIGURAÇÃO DO JPA / HIBERNATE
# ================================

# Dialeto SQL correspondente à versão do MySQL
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect

# Estratégia de geração de schema:
# 'update' = atualiza as tabelas automaticamente com base nas entidades
# 'create' = recria todas as tabelas a cada execução (apaga os dados!)
# 'none' = nenhuma ação automática
spring.jpa.hibernate.ddl-auto=create
=======
# CONFIGURAÃ‡ÃƒO DO JPA / HIBERNATE
# ================================

# Dialeto SQL correspondente Ã  versÃ£o do MySQL
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect

# EstratÃ©gia de geraÃ§Ã£o de schema:
# 'update' = atualiza as tabelas automaticamente com base nas entidades
# 'create' = recria todas as tabelas a cada execuÃ§Ã£o (apaga os dados!)
# 'none' = nenhuma aÃ§Ã£o automÃ¡tica
spring.jpa.hibernate.ddl-auto=update
>>>>>>> 8b1224231e1d1f484b8b7d9a4b3b62f9dc04b574

# Exibe as queries SQL formatadas no console
spring.jpa.properties.hibernate.format_sql=true

# ================================
<<<<<<< HEAD
# CONFIGURAÇÃO DO SERVIDOR
# ================================

# Porta onde o servidor será executado
# Substitua 'porta_desejada' pela porta desejada (ex: 8080, 19132, etc.)
server.port=19132

# Segurança
application.security.jwt.secret-key=404E635266556A586E3272357538782F413F4428472B4B6250645367566B5970
application.security.jwt.expiration=86400000
=======
# CONFIGURAÃ‡ÃƒO DO SERVIDOR
# ================================

# Porta onde o servidor serÃ¡ executado
# Substitua 'porta_desejada' pela porta desejada (ex: 8080, 19132, etc.)
server.port=porta_desejada
>>>>>>> 8b1224231e1d1f484b8b7d9a4b3b62f9dc04b574
